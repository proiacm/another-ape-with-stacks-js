{"version":3,"file":"connect-react.cjs.development.js","sources":["../src/react/components/connect/context.tsx","../src/react/components/connect/index.tsx","../src/react/hooks/use-connect.ts"],"sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport { AuthOptions, FinishedAuthData } from '@stacks/connect';\nimport { UserSession } from '@stacks/auth';\n\nenum States {\n  UPDATE_AUTH_OPTIONS = 'data/update-auth-options',\n}\n\ntype Action = { type: string; payload?: any };\n\ntype Dispatch = (action: Action) => void;\n\ntype State = {\n  isOpen: boolean;\n  isAuthenticating: boolean;\n  authData?: FinishedAuthData;\n  authOptions: AuthOptions;\n  userSession?: UserSession;\n};\n\nconst initialState: State = {\n  isOpen: false,\n  isAuthenticating: false,\n  authData: undefined,\n  userSession: undefined,\n  authOptions: {\n    redirectTo: '',\n    manifestPath: '',\n    onFinish: () => null,\n    authOrigin: undefined,\n    sendToSignIn: false,\n    appDetails: {\n      name: '',\n      icon: '',\n    },\n  },\n};\n\nconst connectReducer = (state: State, { type, payload }: { type: string; payload?: any }) => {\n  switch (type) {\n    case States.UPDATE_AUTH_OPTIONS: {\n      return {\n        ...state,\n        authOptions: {\n          ...state.authOptions,\n          ...payload,\n        },\n      };\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${type}`);\n    }\n  }\n};\n\nconst ConnectContext = createContext<State>(initialState);\n\nconst ConnectDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst ConnectProvider = ({\n  authOptions,\n  children,\n}: {\n  authOptions: AuthOptions;\n  children: any;\n}) => {\n  const [state, dispatch] = useReducer(connectReducer, initialState);\n\n  return (\n    <ConnectContext.Provider value={{ ...state, authOptions }}>\n      <ConnectDispatchContext.Provider value={dispatch}>{children}</ConnectDispatchContext.Provider>\n    </ConnectContext.Provider>\n  );\n};\n\nexport {\n  initialState,\n  connectReducer,\n  ConnectContext,\n  ConnectDispatchContext,\n  ConnectProvider,\n  States,\n};\n","import React from 'react';\nimport { ConnectProvider } from './context';\nimport { AuthOptions } from '@stacks/connect';\n\n/**\n * Usage\n *\n *\n * const auth = {\n      manifestPath: '/static/manifest.json',\n      redirectTo: '/',\n      finished: ({userSession}) => {\n        doFinishSignIn();\n      },\n      authOrigin,\n      appDetails: {\n        name: 'Wink',\n        icon: 'url'\n      }\n    }\n *\n * <Connect authOptions={authOptions} />\n */\nconst Connect = ({ authOptions, children }: { authOptions: AuthOptions; children: any }) => {\n  return <ConnectProvider authOptions={authOptions}>{children}</ConnectProvider>;\n};\n\nexport { Connect };\n","import { useContext } from 'react';\nimport {\n  authenticate,\n  AuthOptions,\n  ContractCallOptions,\n  ContractDeployOptions,\n  STXTransferOptions,\n  openContractCall,\n  openContractDeploy,\n  openSTXTransfer,\n  showBlockstackConnect,\n  ContractCallRegularOptions,\n  ContractCallSponsoredOptions,\n  ContractDeployRegularOptions,\n  ContractDeploySponsoredOptions,\n  STXTransferRegularOptions,\n  STXTransferSponsoredOptions,\n  FinishedAuthData,\n  openStructuredDataSignatureRequestPopup,\n  openSignatureRequestPopup,\n} from '@stacks/connect';\nimport { ConnectContext, ConnectDispatchContext, States } from '../components/connect/context';\nimport { SignatureRequestOptions } from '@stacks/connect';\nimport { StructuredDataSignatureRequestOptions } from '@stacks/connect/src/types/structuredDataSignature';\n\nconst useConnectDispatch = () => {\n  const dispatch = useContext(ConnectDispatchContext);\n  if (!dispatch) {\n    throw new Error('This must be used within the ConnectProvider component.');\n  }\n  return dispatch;\n};\n\nexport const useConnect = () => {\n  const { isOpen, isAuthenticating, authData, authOptions, userSession } =\n    useContext(ConnectContext);\n\n  const dispatch = useConnectDispatch();\n\n  const doUpdateAuthOptions = (payload: Partial<AuthOptions>) => {\n    return dispatch({ type: States.UPDATE_AUTH_OPTIONS, payload });\n  };\n\n  /**\n   *\n   * @param signIn Whether the user should be sent to sign in\n   * @param options\n   */\n  const doOpenAuth = (signIn?: boolean, options?: Partial<AuthOptions>) => {\n    if (signIn) {\n      const _options: AuthOptions = {\n        ...authOptions,\n        ...options,\n        onFinish: (payload: FinishedAuthData) => {\n          authOptions.onFinish?.(payload);\n        },\n        sendToSignIn: true,\n      };\n      void authenticate(_options);\n      return;\n    } else {\n      showBlockstackConnect({\n        ...authOptions,\n        sendToSignIn: false,\n      });\n    }\n    authOptions && doUpdateAuthOptions(authOptions);\n  };\n\n  const doAuth = (options: Partial<AuthOptions> = {}) => {\n    void authenticate({\n      ...authOptions,\n      ...options,\n      onFinish: (payload: FinishedAuthData) => {\n        authOptions.onFinish?.(payload);\n      },\n    });\n  };\n\n  function doContractCall(options: ContractCallRegularOptions): Promise<void>;\n  function doContractCall(options: ContractCallSponsoredOptions): Promise<void>;\n  function doContractCall(options: ContractCallOptions): Promise<void>;\n  function doContractCall(options: ContractCallOptions) {\n    return openContractCall({\n      ...options,\n      authOrigin: authOptions.authOrigin,\n      appDetails: authOptions.appDetails,\n    });\n  }\n\n  function doContractDeploy(options: ContractDeployRegularOptions): Promise<void>;\n  function doContractDeploy(options: ContractDeploySponsoredOptions): Promise<void>;\n  function doContractDeploy(options: ContractDeployOptions): Promise<void>;\n  function doContractDeploy(options: ContractDeployOptions) {\n    return openContractDeploy({\n      ...options,\n      authOrigin: authOptions.authOrigin,\n      appDetails: authOptions.appDetails,\n    });\n  }\n\n  function doSTXTransfer(options: STXTransferRegularOptions): Promise<void>;\n  function doSTXTransfer(options: STXTransferSponsoredOptions): Promise<void>;\n  function doSTXTransfer(options: STXTransferOptions): Promise<void>;\n  function doSTXTransfer(options: STXTransferOptions) {\n    return openSTXTransfer({\n      ...options,\n      authOrigin: authOptions.authOrigin,\n      appDetails: authOptions.appDetails,\n    });\n  }\n\n  function sign(options: SignatureRequestOptions) {\n    return openSignatureRequestPopup({\n      ...options,\n      authOrigin: authOptions.authOrigin,\n      appDetails: authOptions.appDetails,\n    });\n  }\n\n  function signStructuredData(options: StructuredDataSignatureRequestOptions) {\n    return openStructuredDataSignatureRequestPopup({\n      ...options,\n      authOrigin: authOptions.authOrigin,\n      appDetails: authOptions.appDetails,\n    });\n  }\n\n  return {\n    isOpen,\n    isAuthenticating,\n    authData,\n    authOptions,\n    userSession,\n    doOpenAuth,\n    doAuth,\n    authenticate,\n    doContractCall,\n    doContractDeploy,\n    doSTXTransfer,\n    sign,\n    signStructuredData,\n  };\n};\n"],"names":["States","States2","initialState","isOpen","isAuthenticating","authData","userSession","authOptions","redirectTo","manifestPath","onFinish","authOrigin","sendToSignIn","appDetails","name","icon","connectReducer","state","type","payload","UPDATE_AUTH_OPTIONS","Error","ConnectContext","createContext","ConnectDispatchContext","ConnectProvider","children","useReducer","dispatch","Provider","value","Connect","useConnectDispatch","useContext","useConnect","doUpdateAuthOptions","doOpenAuth","signIn","options","_options","authenticate","doAuth","openContractCall","openContractDeploy","openSTXTransfer","openSignatureRequestPopup","openStructuredDataSignatureRequestPopup","doContractCall","doContractDeploy","doSTXTransfer","sign","signStructuredData"],"mappings":"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"}