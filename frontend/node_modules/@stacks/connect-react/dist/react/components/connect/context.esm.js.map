{"version":3,"file":"context.esm.js","sources":["../../../../src/react/components/connect/context.tsx"],"sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport { AuthOptions, FinishedAuthData } from '@stacks/connect';\nimport { UserSession } from '@stacks/auth';\n\nenum States {\n  UPDATE_AUTH_OPTIONS = 'data/update-auth-options',\n}\n\ntype Action = { type: string; payload?: any };\n\ntype Dispatch = (action: Action) => void;\n\ntype State = {\n  isOpen: boolean;\n  isAuthenticating: boolean;\n  authData?: FinishedAuthData;\n  authOptions: AuthOptions;\n  userSession?: UserSession;\n};\n\nconst initialState: State = {\n  isOpen: false,\n  isAuthenticating: false,\n  authData: undefined,\n  userSession: undefined,\n  authOptions: {\n    redirectTo: '',\n    manifestPath: '',\n    onFinish: () => null,\n    authOrigin: undefined,\n    sendToSignIn: false,\n    appDetails: {\n      name: '',\n      icon: '',\n    },\n  },\n};\n\nconst connectReducer = (state: State, { type, payload }: { type: string; payload?: any }) => {\n  switch (type) {\n    case States.UPDATE_AUTH_OPTIONS: {\n      return {\n        ...state,\n        authOptions: {\n          ...state.authOptions,\n          ...payload,\n        },\n      };\n    }\n\n    default: {\n      throw new Error(`Unhandled action type: ${type}`);\n    }\n  }\n};\n\nconst ConnectContext = createContext<State>(initialState);\n\nconst ConnectDispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst ConnectProvider = ({\n  authOptions,\n  children,\n}: {\n  authOptions: AuthOptions;\n  children: any;\n}) => {\n  const [state, dispatch] = useReducer(connectReducer, initialState);\n\n  return (\n    <ConnectContext.Provider value={{ ...state, authOptions }}>\n      <ConnectDispatchContext.Provider value={dispatch}>{children}</ConnectDispatchContext.Provider>\n    </ConnectContext.Provider>\n  );\n};\n\nexport {\n  initialState,\n  connectReducer,\n  ConnectContext,\n  ConnectDispatchContext,\n  ConnectProvider,\n  States,\n};\n"],"names":["States","States2","initialState","isOpen","isAuthenticating","authData","userSession","authOptions","redirectTo","manifestPath","onFinish","authOrigin","sendToSignIn","appDetails","name","icon","connectReducer","state","type","payload","UPDATE_AUTH_OPTIONS","Error","ConnectContext","createContext","ConnectDispatchContext","ConnectProvider","children","useReducer","dispatch","Provider","value"],"mappings":";;;IAIKA;;AAAL,WAAKC,SAAL;mCACwB;CADxB,EAAKD,uBAAL;;IAgBME,eAAsB;AAC1BC,EAAAA,QAAQ,KADkB;AAE1BC,EAAAA,kBAAkB,KAFQ;AAG1BC,EAAAA,UAAU,MAHgB;AAI1BC,EAAAA,aAAa,MAJa;AAK1BC,EAAAA,aAAa;AACXC,IAAAA,YAAY,EADD;AAEXC,IAAAA,cAAc,EAFH;AAGXC,IAAAA,UAAU;AAAA,aAAM,IAAN;AAAA,KAHC;AAIXC,IAAAA,YAAY,MAJD;AAKXC,IAAAA,cAAc,KALH;AAMXC,IAAAA,YAAY;AACVC,MAAAA,MAAM,EADI;AAEVC,MAAAA,MAAM;AAFI;AAND;AALa;;IAkBtBC,iBAAiB,SAAjBA,cAAiB,CAACC,KAAD,QAAsE;AAAA,MAArDC,IAAqD,QAArDA,IAAqD;AAAA,MAA/CC,OAA+C,QAA/CA,OAA+C;;UACnFD;SACDlB,OAAOoB;AAAqB;4BAE1BH;AACHV,UAAAA,0BACKU,MAAMV,aACNY;;;;;AAKA;cACD,IAAIE,KAAJ,6BAAoCH,IAApC;;;;;IAKNI,8BAAiBC,cAAqBrB;IAEtCsB,sCAAyBD,cAAoC;;IAE7DE,kBAAkB,SAAlBA,eAAkB,QAMlB;AAAA,MALJlB,WAKI,SALJA,WAKI;AAAA,MAJJmB,QAII,SAJJA,QAII;;oBACsBC,WAAWX,gBAAgBd;MAA9Ce;MAAOW;;4CAGXN,eAAeO,UAAhB;AAAyBC,IAAAA,oBAAYb;AAAOV,MAAAA,aAAAA;;AAA5C,wCACGiB,uBAAuBK,UAAxB;AAAiCC,IAAAA,OAAOF;AAAxC,KAAmDF;;;;;"}