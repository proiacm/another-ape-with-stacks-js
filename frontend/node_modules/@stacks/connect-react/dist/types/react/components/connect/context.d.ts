import React from 'react';
import { AuthOptions, FinishedAuthData } from '@stacks/connect';
import { UserSession } from '@stacks/auth';
declare enum States {
    UPDATE_AUTH_OPTIONS = "data/update-auth-options"
}
declare type Action = {
    type: string;
    payload?: any;
};
declare type Dispatch = (action: Action) => void;
declare type State = {
    isOpen: boolean;
    isAuthenticating: boolean;
    authData?: FinishedAuthData;
    authOptions: AuthOptions;
    userSession?: UserSession;
};
declare const initialState: State;
declare const connectReducer: (state: State, { type, payload }: {
    type: string;
    payload?: any;
}) => {
    authOptions: any;
    isOpen: boolean;
    isAuthenticating: boolean;
    authData?: FinishedAuthData | undefined;
    userSession?: UserSession | undefined;
};
declare const ConnectContext: React.Context<State>;
declare const ConnectDispatchContext: React.Context<Dispatch | undefined>;
declare const ConnectProvider: ({ authOptions, children, }: {
    authOptions: AuthOptions;
    children: any;
}) => JSX.Element;
export { initialState, connectReducer, ConnectContext, ConnectDispatchContext, ConnectProvider, States, };
